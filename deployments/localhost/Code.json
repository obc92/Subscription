{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Already_SUB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Sub_NotQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tmr",
          "type": "uint256"
        }
      ],
      "name": "Subscription",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "name": "callTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum Code.access",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "changePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSubscribers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc7275b4172fa6e6c730676dcfced2530bf3b5293d25fc3bcfc54b3443479a570",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "765277",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb83d423ed08042fc7b0d50f4c84e19a6e89b836b2ede669fe3da2a67b7455230",
    "transactionHash": "0xc7275b4172fa6e6c730676dcfced2530bf3b5293d25fc3bcfc54b3443479a570",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "765277",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "100000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "688e01ef6feaee34ec50d9dcc862a4c0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Already_SUB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Sub_NotQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tmr\",\"type\":\"uint256\"}],\"name\":\"Subscription\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"callTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum Code.access\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscribers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Code.sol\":\"Code\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Code.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nerror Sub_NotQuantity();\\nerror Already_SUB();\\n\\ncontract Code {\\n\\n    //Variables\\n\\n    enum access {\\n            DENIED,\\n            GRANTED\\n        }\\n\\n    struct Dades {\\n        uint256 timer;\\n        access s_access;\\n    }\\n\\n    address payable [] private s_Wallets;\\n    mapping (address => Dades) s_Registre;\\n    address public immutable i_owner;\\n    uint256 private s_SubPrice; //= 0.1 ether;\\n    //access private s_access;\\n\\n    constructor (uint256 startPrice) {\\n        i_owner = msg.sender;\\n        s_SubPrice = startPrice;\\n    }\\n\\n    modifier onlyOwner{\\n        require(msg.sender == i_owner);  \\n        _;     \\n    }\\n    //Functions\\n    function Subscription(uint256 tmr) public payable {\\n        \\n        //Pay subscription\\n        Dades memory find = s_Registre[msg.sender];\\n        if (find.s_access == access.GRANTED){\\n            revert Already_SUB();\\n        }\\n        if (msg.value != s_SubPrice){\\n            revert Sub_NotQuantity();\\n        }\\n        //Add wallet to the s_Wallets\\n        s_Wallets.push(payable(msg.sender));\\n            //emit RaffleEnter(msg.sender);\\n        //Start subscription time\\n        Dades storage dades = s_Registre[msg.sender];\\n        dades.timer = tmr;\\n        dades.s_access = access.GRANTED;\\n        //s_Registre[msg.sender] += Dades.push(30, access = access.GRANTED);\\n    }\\n\\n    function changePrice(uint256 newPrice) public onlyOwner {\\n        s_SubPrice = newPrice;\\n    }\\n    function Withdraw () public onlyOwner {\\n        // (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        // require(callSuccess, \\\"Call failed\\\");\\n        (bool Success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(Success);\\n    }\\n\\n    //Getter functions\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n    function getPrice() public view returns(uint256) {\\n        return s_SubPrice;\\n    }\\n    function getBalance() public view onlyOwner returns(uint256) {\\n        return (address(this).balance);\\n    }\\n    function getSubscribers() public view returns (uint256) {\\n        return s_Wallets.length;\\n    }\\n    function callTimer(address add) public view onlyOwner returns (uint256, access){\\n        Dades memory timer = s_Registre[add];\\n        return (timer.timer, timer.s_access);\\n     }\\n    // function callState(address add) public view onlyOwner returns (access){\\n    //     Dades memory acc = s_Registre[add];\\n    //     return acc.s_access;\\n    // }\\n    // function callList() public view onlyOwner returns (bytes32[]){\\n    //     return s_Wallets;\\n    // }\\n\\n    function getMembers() public view returns (address[] memory){\\n      address[] memory id = new address[](s_Wallets.length);\\n      for (uint i = 0; i < s_Wallets.length; i++) {\\n          id[i] = s_Wallets[i];\\n      }\\n      return id;\\n  }\\n}\\n\",\"keccak256\":\"0xb49ceb17208aebaa2846eeab044edbcd135df8a276357bda0a464e97e0630828\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610da3380380610da3833981810160405281019061003291906100b1565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600281905550506100de565b600080fd5b6000819050919050565b61008e8161007b565b811461009957600080fd5b50565b6000815190506100ab81610085565b92915050565b6000602082840312156100c7576100c6610076565b5b60006100d58482850161009c565b91505092915050565b60805160601c610c7d61012660003960008181610453015281816104b10152818161050b015281816105a4015281816106de0152818161074301526108420152610c7d6000f3fe6080604052600436106100915760003560e01c806398d5fdca1161005957806398d5fdca1461014a5780639eab525314610175578063a2b40d19146101a0578063bc19f7c5146101c9578063dba6335f1461020757610091565b806305cc61ad14610096578063066e8936146100c157806312065fe0146100dd57806357ea89b614610108578063893d20e81461011f575b600080fd5b3480156100a257600080fd5b506100ab610232565b6040516100b8919061087d565b60405180910390f35b6100db60048036038101906100d691906108c9565b61023e565b005b3480156100e957600080fd5b506100f261044f565b6040516100ff919061087d565b60405180910390f35b34801561011457600080fd5b5061011d6104af565b005b34801561012b57600080fd5b506101346105a0565b6040516101419190610937565b60405180910390f35b34801561015657600080fd5b5061015f6105c8565b60405161016c919061087d565b60405180910390f35b34801561018157600080fd5b5061018a6105d2565b6040516101979190610a10565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c291906108c9565b6106dc565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610a5e565b61073e565b6040516101fe929190610b02565b60405180910390f35b34801561021357600080fd5b5061021c610840565b6040516102299190610937565b60405180910390f35b60008080549050905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660018111156102b9576102b8610a8b565b5b60018111156102cb576102ca610a8b565b5b8152505090506001808111156102e4576102e3610a8b565b5b816020015160018111156102fb576102fa610a8b565b5b1415610333576040517fb7bb0ae300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254341461036e576040517f78ff246500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905082816000018190555060018160010160006101000a81548160ff0219169083600181111561044557610444610a8b565b5b0217905550505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a957600080fd5b47905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050757600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161054d90610b5c565b60006040518083038185875af1925050503d806000811461058a576040519150601f19603f3d011682016040523d82523d6000602084013e61058f565b606091505b505090508061059d57600080fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600254905090565b60606000808054905067ffffffffffffffff8111156105f4576105f3610b71565b5b6040519080825280602002602001820160405280156106225781602001602082028036833780820191505090505b50905060005b6000805490508110156106d4576000818154811061064957610648610ba0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061068757610686610ba0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806106cc90610bfe565b915050610628565b508091505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073457600080fd5b8060028190555050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079957600080fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600181111561081457610813610a8b565b5b600181111561082657610825610a8b565b5b815250509050806000015181602001519250925050915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000819050919050565b61087781610864565b82525050565b6000602082019050610892600083018461086e565b92915050565b600080fd5b6108a681610864565b81146108b157600080fd5b50565b6000813590506108c38161089d565b92915050565b6000602082840312156108df576108de610898565b5b60006108ed848285016108b4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610921826108f6565b9050919050565b61093181610916565b82525050565b600060208201905061094c6000830184610928565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61098781610916565b82525050565b6000610999838361097e565b60208301905092915050565b6000602082019050919050565b60006109bd82610952565b6109c7818561095d565b93506109d28361096e565b8060005b83811015610a035781516109ea888261098d565b97506109f5836109a5565b9250506001810190506109d6565b5085935050505092915050565b60006020820190508181036000830152610a2a81846109b2565b905092915050565b610a3b81610916565b8114610a4657600080fd5b50565b600081359050610a5881610a32565b92915050565b600060208284031215610a7457610a73610898565b5b6000610a8284828501610a49565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610acb57610aca610a8b565b5b50565b6000819050610adc82610aba565b919050565b6000610aec82610ace565b9050919050565b610afc81610ae1565b82525050565b6000604082019050610b17600083018561086e565b610b246020830184610af3565b9392505050565b600081905092915050565b50565b6000610b46600083610b2b565b9150610b5182610b36565b600082019050919050565b6000610b6782610b39565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0982610864565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3c57610c3b610bcf565b5b60018201905091905056fea2646970667358221220d947956cd71ffb7570228364152c6d57ec7031be3094c5f37a125acab80abeeb64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c806398d5fdca1161005957806398d5fdca1461014a5780639eab525314610175578063a2b40d19146101a0578063bc19f7c5146101c9578063dba6335f1461020757610091565b806305cc61ad14610096578063066e8936146100c157806312065fe0146100dd57806357ea89b614610108578063893d20e81461011f575b600080fd5b3480156100a257600080fd5b506100ab610232565b6040516100b8919061087d565b60405180910390f35b6100db60048036038101906100d691906108c9565b61023e565b005b3480156100e957600080fd5b506100f261044f565b6040516100ff919061087d565b60405180910390f35b34801561011457600080fd5b5061011d6104af565b005b34801561012b57600080fd5b506101346105a0565b6040516101419190610937565b60405180910390f35b34801561015657600080fd5b5061015f6105c8565b60405161016c919061087d565b60405180910390f35b34801561018157600080fd5b5061018a6105d2565b6040516101979190610a10565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c291906108c9565b6106dc565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610a5e565b61073e565b6040516101fe929190610b02565b60405180910390f35b34801561021357600080fd5b5061021c610840565b6040516102299190610937565b60405180910390f35b60008080549050905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660018111156102b9576102b8610a8b565b5b60018111156102cb576102ca610a8b565b5b8152505090506001808111156102e4576102e3610a8b565b5b816020015160018111156102fb576102fa610a8b565b5b1415610333576040517fb7bb0ae300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254341461036e576040517f78ff246500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905082816000018190555060018160010160006101000a81548160ff0219169083600181111561044557610444610a8b565b5b0217905550505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a957600080fd5b47905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050757600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161054d90610b5c565b60006040518083038185875af1925050503d806000811461058a576040519150601f19603f3d011682016040523d82523d6000602084013e61058f565b606091505b505090508061059d57600080fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600254905090565b60606000808054905067ffffffffffffffff8111156105f4576105f3610b71565b5b6040519080825280602002602001820160405280156106225781602001602082028036833780820191505090505b50905060005b6000805490508110156106d4576000818154811061064957610648610ba0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061068757610686610ba0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806106cc90610bfe565b915050610628565b508091505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073457600080fd5b8060028190555050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079957600080fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600181111561081457610813610a8b565b5b600181111561082657610825610a8b565b5b815250509050806000015181602001519250925050915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000819050919050565b61087781610864565b82525050565b6000602082019050610892600083018461086e565b92915050565b600080fd5b6108a681610864565b81146108b157600080fd5b50565b6000813590506108c38161089d565b92915050565b6000602082840312156108df576108de610898565b5b60006108ed848285016108b4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610921826108f6565b9050919050565b61093181610916565b82525050565b600060208201905061094c6000830184610928565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61098781610916565b82525050565b6000610999838361097e565b60208301905092915050565b6000602082019050919050565b60006109bd82610952565b6109c7818561095d565b93506109d28361096e565b8060005b83811015610a035781516109ea888261098d565b97506109f5836109a5565b9250506001810190506109d6565b5085935050505092915050565b60006020820190508181036000830152610a2a81846109b2565b905092915050565b610a3b81610916565b8114610a4657600080fd5b50565b600081359050610a5881610a32565b92915050565b600060208284031215610a7457610a73610898565b5b6000610a8284828501610a49565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610acb57610aca610a8b565b5b50565b6000819050610adc82610aba565b919050565b6000610aec82610ace565b9050919050565b610afc81610ae1565b82525050565b6000604082019050610b17600083018561086e565b610b246020830184610af3565b9392505050565b600081905092915050565b50565b6000610b46600083610b2b565b9150610b5182610b36565b600082019050919050565b6000610b6782610b39565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0982610864565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3c57610c3b610bcf565b5b60018201905091905056fea2646970667358221220d947956cd71ffb7570228364152c6d57ec7031be3094c5f37a125acab80abeeb64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/Code.sol:Code",
        "label": "s_Wallets",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address_payable)dyn_storage"
      },
      {
        "astId": 22,
        "contract": "contracts/Code.sol:Code",
        "label": "s_Registre",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Dades)14_storage)"
      },
      {
        "astId": 26,
        "contract": "contracts/Code.sol:Code",
        "label": "s_SubPrice",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address_payable)dyn_storage": {
        "base": "t_address_payable",
        "encoding": "dynamic_array",
        "label": "address payable[]",
        "numberOfBytes": "32"
      },
      "t_enum(access)8": {
        "encoding": "inplace",
        "label": "enum Code.access",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Dades)14_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Code.Dades)",
        "numberOfBytes": "32",
        "value": "t_struct(Dades)14_storage"
      },
      "t_struct(Dades)14_storage": {
        "encoding": "inplace",
        "label": "struct Code.Dades",
        "members": [
          {
            "astId": 10,
            "contract": "contracts/Code.sol:Code",
            "label": "timer",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/Code.sol:Code",
            "label": "s_access",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(access)8"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}